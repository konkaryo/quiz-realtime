generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id        String   @id @default(cuid())
  code      String   @unique
  createdAt DateTime @default(now())
  games     Game[]
}

model Game {
  id          String       @id @default(cuid())
  createdAt   DateTime     @default(now())
  state       String
  room        Room         @relation(fields: [roomId], references: [id])
  roomId      String
  playerGames PlayerGame[]
}

model Player {
  id          String       @id @default(cuid())
  name        String
  playerGames PlayerGame[]
}

model Question {
  id              String           @id @default(cuid())
  text            String
  choices         Choice[]
  theme           String?
  difficulty      String?
  img             String?
  playerGames     PlayerGame[]
  acceptedAnswers AcceptedAnswer[]
}

model PlayerGame {
  id        String     @id @default(cuid())
  game      Game       @relation(fields: [gameId], references: [id])
  gameId    String
  player    Player     @relation(fields: [playerId], references: [id])
  playerId  String
  questions Question[]
  answers   Answer[]
  score     Int        @default(0)

  @@unique([gameId, playerId], name: "gameId_playerId")
}

model Choice {
  id         String   @id @default(cuid())
  label      String
  isCorrect  Boolean  @default(false)
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
}

model Answer {
  id           String     @id @default(cuid())
  playerGame   PlayerGame @relation(fields: [playerGameId], references: [id])
  playerGameId String
  text         String
  correct      Boolean
  createdAt    DateTime   @default(now())
}

model AcceptedAnswer {
  id         String   @id @default(cuid())
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  text       String
  norm       String

  @@unique([questionId, norm])
}
